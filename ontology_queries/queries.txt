prefix domainOntInst: <http://www.semanticweb.org/caceta/ontologies/2020/3/DomainONT-inst-GuideRobot#>
prefix domainOntFrame: <http://www.semanticweb.org/caceta/ontologies/2020/3/DomainONT-FrameAction#>
prefix domainOnt: <http://www.semanticweb.org/caceta/ontologies/2020/3/DomainONT#>
prefix rdfs: <http://www.w3.org/2000/01/rd-schema#>
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>


####SELECTS####

*verb to intent

select distinct ?intent ?action ?actionidval where {{
	?intent a domainOntFrame:Intent.
	?intent domainOntFrame:hasFrame ?frame.
	?frame domainOntFrame:hasFrameHead ?framehead .
	?framehead domainOnt:hasLexicalUnit ?lu .
	?lu domainOnt:IDval ?luval .
	VALUES ?luval {{"{verb_LU}"}}
	?intent domainOntFrame:belongsToAction ?action .
	?action domainOnt:IDval ?actionidval .
}}

*target adequacy

select distinct ?argument ?type ?value where {{
	domainOntInst:{{action}} domainOntFrame:hasArgument ?argument .
	?argument domainOnt:appliesToWorldElementGroup ?group .
	?argument domainOnt:hasType ?t .
	?t domainOnt:IDval ?type.
	?group domainOnt:hasGroupMember ?elem.
	?elem domainOnt:hasLexicalUnit ?elemlu .
	?elemlu domainOnt:IDval ?elemluidval .
	?elem domainOnt:hasTargetSystemReadableInfo ?elemTSRI .
	?elemTSRI domainOnt:val ?value.
	VALUES ?elemluidval {{"{targetLU}"}}
}}

*get action args list

select distinct ?argument ?type where {{
	domainOntInst:{{action}} domainOntFrame:hasArgument ?argument .
	?argument domainOnt:hasType ?t .
	?t domainOnt:IDval ?type.
}}

select ?argument ?relation ?type where {
	?argument a domainOntFrame:Argument .
	domainOntInst:{{action}} domainOntFrame:hasArgument ?argument .
	domainOntInst:{{action}} ?relation ?argument .
	?argument domainOnt:hasType ?t .
	?t domainOnt:IDval ?type.
}

[tested - no reasoning]
SELECT ?arg ?type where {
	?arg a domainOntFrame:Argument .
	domainOntInst:GuideRobot_take domainOntFrame:hasCoreArgument ?arg .
	?arg domainOnt:hasType ?t .
	?t domainOnt:IDval ?type .
}


*info ready?

+Returns True/False:

ASK {
	?arg a DomainONTFrame:argument .
	?arg DomainONTFrame:isCoreArgumentOf domainOntInst:{{action}} .
	VALUES ?arg {""} .
}

+Returns CoreArgs that are not filled:

SELECT distinct ?arg ?value where {
	?arg a DomainONTFrame:argumentTrace .
	?arg DomainONTFrame:isCoreArgumentOf domainOntInst:{{action}} .
	?arg DomainONTFrame:hasValue ?value .
}

*get args+values+TSRI

SELECT ?arg ?value ?TSRI where {
	?arg DomainONTFrame:isCoreArgumentOf domainOntInst:{{ActionTrace}} .
	?arg domainOnt:hasValue ?value .
	domainOntInst:{{ActionTrace}} 
}


*dialogue status?

####UPDATES####

*create Dial

insert data{
	DialSystemONT-inst:dial_{identif_datetime} a DialOnt:Dialogue .
	DialSystemONT-inst:dial_{identif_datetime} DialOnt:initDateTime "{identif_datetime}" .
	DialSystemONT-inst:dial_{identif_datetime} DialOnt:dialStatus "open" .
}

*create MainDialogue + UserRequest

insert data{
	DialSystemONT-inst:{{MainDialogueX}} a dialogueOnt:MainDialogue .
	DialSystemONT-inst:{{MainDialogueX}} dialogueOnt:initDateTime {{"{time}"}} .
	DialSystemONT-inst:{{Dialogue}} dialogueOnt:hasMainDialogue {{MainDialogueX}} .
	DialSystemONT-inst:{{UserRequestX}} a dialogueOnt:UserRequest .
	DialSystemONT-inst:{{UserRequestX}} dialogueOnt:text {{"{UserRequestTranscription}"}} .
	DialSystemONT-inst:{{MainDialogueX}} dialogueOnt:hasUserRequest DialSystemONT-inst:{{UserRequestX}} .
}

*add SkillTrace, FrameTrace, IntentTrace, ActionTrace

+SkillTrace
insert data{
	DialSystemONT-inst:{{SkillTrace}} a dialogueOnt:SkillTrace .
}


+FrameTrace
insert data{
	DialSystemONT-inst:{{FrameTrace}} a dialogueOnt:FrameTrace .
}

+IntentTrace
insert data{
	DialSystemONT-inst:{{IntentTrace}} a dialogueOnt:IntentTrace .
	DialSystemONT-inst:{{IntentTrace}} dialogueOnt:hasFrame DialSystemONT-inst:{{CurrentFrameTrace}} .
	DialSystemONT-inst:{{IntentTrace}} dialogueOnt:isIntentOf DialSystemONT-inst:{{CurrentSkillTrace}} .
}

+ActionTrace + properties

insert data{
	DialSystemONT-inst:{{ActionTrace^}} a dialogueOnt:ActionTrace .
	DialSystemONT-inst:{{CurrentUserRequest^^}} dialogueOnt:hasActionTrace DialSystemONT-inst:{{ActionTrace^}} .
	DialSystemONT-inst:{{ActionTrace}} dialogueOnt:hasIntent DialSystemONT-inst:{{CurrentIntentTrace}} .
	
	DialSystemONT-inst:{{ActionTrace}} dialogueOnt:hasArgument DialSystemONT-inst:{{ArgTrace}} . #según los que haya
	DialSystemONT-inst:{{ActionTrace}} dialogueOnt:hasArgument DialSystemONT-inst:{{ArgTrace}} .
	DialSystemONT-inst:{{ActionTrace}} dialogueOnt:hasArgument DialSystemONT-inst:{{ArgTrace}} .

}

^ActionTrace -> name of Action+date+MainDial
^^ Esto se tiene que extraer (en la propia query?)

+All at once

insert data{
	DialSystemONT-inst:{{SkillTrace}} a DomainOntFrame:SkillTrace .
	DialSystemONT-inst:{{FrameTrace}} a DomainOntFrame:FrameTrace .
	DialSystemONT-inst:{{IntentTrace}} a DomainOntFrame:IntentTrace .
	DialSystemONT-inst:{{ActionTrace^}} a DomainOntFrame:ActionTrace .

	DialSystemONT-inst:{{IntentTrace}} DomainOntFrame:isIntentOf DialSystemONT-inst:{{SkillTrace}} .

	DialSystemONT-inst:{{IntentTrace}} DomainOntFrame:hasFrame DialSystemONT-inst:{{CurrentFrameTrace}} .

	DialSystemONT-inst:{{ActionTrace}} DomainOntFrame:hasIntent DialSystemONT-inst:{{IntentTrace}} .
	DialSystemONT-inst:{{CurrentUserRequest^^}} DialSystemONT:hasActionTrace DialSystemONT-inst:{{ActionTrace^}} .
	
	DialSystemONT-inst:{{ActionTrace}} DomainOntFrame:hasCoreArgument DialSystemONT-inst:{{ArgTrace}} . #según los que haya
	DialSystemONT-inst:{{ActionTrace}} DomainOntFrame:hasOptionalArgument DialSystemONT-inst:{{ArgTrace}} .
	DialSystemONT-inst:{{ActionTrace}} DomainOntFrame:hasArgument DialSystemONT-inst:{{ArgTrace}} .
}

*assign Args (?)

*create SecondaryDialogue + SystemRequest

insert data{
	DialSystemONT-inst:{{SecondaryDialogueX}} a dialogueOnt:SecondaryDialogue .
	DialSystemONT-inst:{{SecondaryDialogueX}} dialogueOnt:initDateTime {{"{time}"}} .
	DialSystemONT-inst:{{SystemRequestX}} a dialogueOnt:SystemRequest .
	DialSystemONT-inst:{{SystemRequestX}} dialogueOnt:text {{"{SystemRequestTranscription}"}} .
	DialSystemONT-inst:{{SecondaryDialogueX}} dialogueOnt:hasSystemRequest DialSystemONT-inst:{{SystemRequestX}} .
}

*create UserResponse

insert data{
	DialSystemONT-inst:{{SecondaryDialogueX}} a dialogueOnt:SecondaryDialogue .
	DialSystemONT-inst:{{UserResponseX}} a dialogueOnt:UserResponse .
	DialSystemONT-inst:{{UserResponseX}} dialogueOnt:text {{"{UserResponseTranscription}"}} .
	DialSystemONT-inst:{{SecondaryDialogueX}} dialogueOnt:hasUserResponse DialSystemONT-inst:{{UserResponseX}} .
}

*update Argument

+Add value to an empty Arg

insert data {
	DialSystemONT-inst:{{ArgumentTrace}} DomainONTFrame:hasValue DomainONTWorldInst:{{WorldElement}} .
}


+Change value of already filled Argument
DELETE+INSERT

delete {?argval}
where {
	DomainOnt:ArgumentTrace DomainOnt:hasValue ?argval
}

insert data {
	DialSystemONT-inst:{{ArgumentTrace}} DomainONTFrame:hasValue DomainONTWorldInst:{{WorldElement}} .
}




*resulting command?


#########

SELECT ?arg
WHERE {
	?arg a DomainONTFrame:Argument .
	?arg DomainONTFrame:hasArgument ?arg
}
INSERT DATA {

} 




insert data{

    DialSystemONT-inst:GuideRobot_Dial1_161020201107 a DomainOntFrame:SkillTrace .}

	